name: Release new version

on:
  workflow_dispatch:

jobs:
  build-and-publish-jvm-android:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make gradlew executable again
        run: chmod +x ./gradlew

      - name: Publish to Sonatype repository
        run: |
          mkdir ~/.sign
          echo "${{ secrets.SIGNING_SECRET_KEY_RING }}" | base64 --decode >> ~/.sign/ring.gpg
          ./gradlew clean publishAllPublicationsToSonatypeRepository
          rm ~/.sign/ring.gpg
        env:
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_SECRET_KEY_RING_FILE: ~/.sign/ring.gpg
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: jvm-android-release
          path: |
            ./build/libs/*.jar
            ./build/outputs/*.aar

  build-and-release-ios:
    runs-on: macos-latest
    env:
      SIGN: false
    steps:
      - name: Check Out
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make gradlew executable again
        run: chmod +x ./gradlew

      - name: Build XCFramework
        run: ./gradlew clean podPublishReleaseXCFramework

      - name: Checkout ios sources
        uses: actions/checkout@v3
        with:
          path: biometric-sdk-ios-release
          repository: biometric-technologies/biometric-sdk-ios-release
          ref: master

      - name: Update ios sources
        working-directory: ./biometric-sdk-ios-release
        run: cp -a ./../build/cocoapods/publish/release/. .

      - name: Get project version
        run: echo "VERSION=$(grep 'version =' build.gradle.kts | awk '{print $3}' | sed 's/\"//g')" >> $GITHUB_ENV

      - name: Commit and push ios sources
        working-directory: ./biometric-sdk-ios-release
        run: |
          mkdir -p ~/.ssh 
          touch ~/.ssh/deploy_key
          echo "${{ secrets.GIT_DEPLOY_KEY }}" >> ~/.ssh/deploy_key
          touch ~/.ssh/config
          echo "Host github-release-repo\n HostName github.com\n IdentityFile ~/.ssh/deploy_key" >> ~/.ssh/config
          chmod 600 ~/.ssh/config
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add -A
          git commit -a -m "Release $VERSION"
          git push
          git tag v$VERSION
          git push --tags
          rm ~/.ssh/deploy_key

      - name: Install Cocoapods
        run: gem install cocoapods

      - name: Release library to Cocoapods
        working-directory: ./biometric-sdk-ios-release
        run: pod trunk push BiometricSdk.podspec
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}

      - name: Zip artifact sources
        run: zip -r biometric-sdk-xcframework-$VERSION-sources.zip ./build/cocoapods/publish/release/BiometricSdk.xcframework

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ios-release
          path: ./biometric-sdk-xcframework-$VERSION-sources.zip

  release-git:
    runs-on: ubuntu-latest
    needs:
      - build-and-publish-jvm-android
      - build-and-release-ios
    steps:
      - name: Check Out
        uses: actions/checkout@v3

      - name: Get project version
        run: echo "VERSION=$(grep 'version =' build.gradle.kts | awk '{print $3}' | sed 's/\"//g')" >> $GITHUB_ENV

      - uses: actions/download-artifact@v3
        with:
          name: jvm-android-release
          path: ./jvm-android-release

      - uses: actions/download-artifact@v3
        with:
          name: ios-release
          path: ./ios-release

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}
          body: Binaries, sources and docs
          draft: false
          prerelease: false

      - name: Upload jvm and android artifacts
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create-release.outputs.id }}
          assets_path: ./jvm-android-release

      - name: Upload ios artifacts
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create-release.outputs.id }}
          assets_path: ./ios-release